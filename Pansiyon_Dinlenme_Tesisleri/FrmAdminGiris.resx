<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hCEIQhCEIQhCEIQhCEIQhCF//9k=
</value>
  </data>
</root>